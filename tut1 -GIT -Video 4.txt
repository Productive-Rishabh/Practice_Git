+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- Linux Base +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
1. Force delete a folder
    >>> rm -rf "Folder Name"
2. Force delete a folder
    >>> rm -f "Folder Name"

==================================================================== GIT Base ====================================================================

1. How to check that git is installed?
Ans. >>> Git
              or
     >>> Git --version 

2. What is Git ?
Ans. Git is a VCS [Version Control System]. It is used to save files History/ Ledger of saving files

3. Difference between git and github?
   Ans:
        Both Git and Github are different git is a version control system while github is a cloud based hosting services
        platform that help to manage git repositeries such as Gitlab, BitBucket, SourceForge,launchpad, GitKraken, Codeberg and so on.

Step 1 to start Version control (Git) in a  folder we need to Initialize a folder 
# Initialization of the Folder is done by 
    >>> Git init

Step 2 Adding Files to the Staging area
    >>> git add "Filename.extension"
                    or
    >>> git add .

Step 3 Final step is to commit the changes # Permanently save the Changes
# It is done by
    >>> git commit -m "Your Messsge relateable to the Work"

# ==========================================================================================================

# Setting up name
   >>> git config --global user.name "User Name"

# ==========================================================================================================

# Setting up email
   >>> git config --global user.email "User Email ID"

# ==========================================================================================================
# Setting name and email directly from vim [Alternative Option]
   >>> git config --global --edit

# exiting vim editor 
       type ":wq" and press enter

# ============================================ Checking Area =================================================

    >>> git config --global user.name
    >>> git config --global user.email



=================================================================== GIT Extras ===================================================================

# To see the History of the Project commits
    >>> git log
# to get all previous things of that time we use stash by reseting with Hashcode
    >>> git reset "Hashcode"
                or
    >>> git checkout "Hashcode"
    >>> git stash # To get older details of the files
# To un stash and come back to pressent time we use pop
    >>> git stash pop
    >>> git stash clear # To permanently delete the Files in staging Area
# Removing a file from Staging area
    >>> git rm -r --cached "filename"
    >>> git restore --staged .
    >>> git restore --staged "Filename.extension"
    >>> git rm -r --cached . # Works well

=================================================================== GIT Branch ===================================================================
6. Tasks in Branch
# Checking in which branch we are now
>>> git branch

# Create Branch
    >>> git branch "Branchname"

# Creating and Moving to the new branch altogether
   >>> git checkout -b "Branchname" # Note: [It will automatically move to branch after creating it]

# Merging a Branch 
    >>> git merge "branchname"

# Renaming a Branch
    >>> git branch -m old-name new-name

# Delete Branch 
    >>> git branch -d "branchname"


=================================================================== GIT HUB =======================================================================

# Attaching GITHUB URL to the Project Folder
    >>> git remote add origin "URL" # add means we are adding a link of our project folder to GITHUB and origin is name by convention we can give any name

# Checking if URL is added or not
    >>> git remote -v

# Undo attaching GITHUB URL to the Project Folder
    >>> git remote remove origin # remove means we are removing the link of our project folder from GITHUB and origin is name by convention we can give any name

=================================================================== GITHUB Commands =======================================================================

    git remote add origin https://github.com/Productive-Rishabh/Git_practice.git
    git branch -M master
    git push -u origin master